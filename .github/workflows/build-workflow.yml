name: Build the plugin

on:
  push:
    branches: ['**']
    # Do not run on release creation
    tags-ignore:
      - 'v[0-9]+.[0-9]+.[0-9]+'
    paths-ignore:
    - 'docker/**'
    - '.github/workflows/docker-images-workflow.yml'
  pull_request:
    paths-ignore:
    - 'docker/**'
    - '.github/workflows/docker-images-workflow.yml'

env:
  IMAGE_PREFIX: jhakonen/tessumod:plugin

jobs:
  build:
    strategy:
      matrix:
        config:
          - os: ubuntu
            runner: ubuntu-latest
            mount: /build
          - os: windows
            runner: windows-2016
            mount: c:/build

    runs-on: ${{ matrix.config.runner }}

    steps:

    # Checkout sources and get plugin version string from latest tag
    - uses: actions/checkout@v2

    - name: Fetch all tags
      run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*

    - name: Get previous git tag
      id: previoustag
      uses: ./.github/actions/github-action-get-previous-tag # WyriHaximus/github-action-get-previous-tag@master
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

    - name: Parse version string
      id: version
      uses: frabert/replace-string-action@v1.1
      with:
        pattern: v([.0-9]+)
        string: ${{ steps.previoustag.outputs.tag }}
        replace-with: $1

    - name: Pull docker image from Docker Hub
      shell: bash
      run: |
        IMAGE_NAME=${IMAGE_PREFIX}-${{ matrix.config.os }}-latest
        echo "Pull docker image: $IMAGE_NAME"
        docker pull $IMAGE_NAME

    - name: Build plugin package
      id: package
      shell: bash
      run: |
        IMAGE_NAME=${IMAGE_PREFIX}-${{ matrix.config.os }}-latest
        echo "Build plugin version ${{ steps.version.outputs.replaced }}"
        docker run \
          --rm \
          --volume '${{ github.workspace }}:${{ matrix.config.mount }}' \
          $IMAGE_NAME \
          ${{ steps.version.outputs.replaced }}

    # Upload plugin files for releasing
    - name: Upload plugin installer artifact
      uses: actions/upload-artifact@v1
      with:
        name: ${{ matrix.config.os }}-plugin
        path: ${{ steps.package.outputs.plugin-artifact }}

    - name: Upload debugging symbols
      uses: actions/upload-artifact@v1
      with:
        name: ${{ matrix.config.os }}-dbgsymbols
        path: ${{ steps.package.outputs.debugsymbols-artifact }}

