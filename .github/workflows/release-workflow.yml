name: Create new release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

env:
  IMAGE_PREFIX: jhakonen/tessumod:plugin

jobs:
  release:
    strategy:
      matrix:
        config:
          # Ubuntu version is not yet supported
          # - os: ubuntu
          #   runner: ubuntu-latest
          #   mount: /build
          - os: windows
            runner: windows-2016
            mount: c:/build

    runs-on: ${{ matrix.config.runner }}

    steps:

    # Checkout sources and get plugin version string from latest tag
    - uses: actions/checkout@v2

    - name: Parse version string
      id: version
      uses: frabert/replace-string-action@v1.1
      with:
        pattern: refs/tags/v([.0-9]+)
        string: ${{ github.ref }}
        replace-with: $1

    - name: Pull docker image from Docker Hub
      shell: bash
      run: |
        IMAGE_NAME=${IMAGE_PREFIX}-${{ matrix.config.os }}-latest
        echo "Pull docker image: $IMAGE_NAME"
        docker pull $IMAGE_NAME

    - name: Build plugin package
      id: package
      shell: bash
      run: |
        IMAGE_NAME=${IMAGE_PREFIX}-${{ matrix.config.os }}-latest
        echo "Build plugin version ${{ steps.version.outputs.replaced }}"
        docker run \
          --rm \
          --volume '${{ github.workspace }}:${{ matrix.config.mount }}' \
          $IMAGE_NAME \
          ${{ steps.version.outputs.replaced }}

    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: TessuMod TeamSpeak plugin version ${{ steps.version.outputs.replaced }}
        draft: true

    - name: Upload plugin installer asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.package.outputs.plugin-artifact }}
        asset_name: ${{ steps.package.outputs.plugin-artifact }}
        asset_content_type: application/zip

    - name: Upload plugin debug symbols asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.package.outputs.debugsymbols-artifact }}
        asset_name: ${{ steps.package.outputs.debugsymbols-artifact }}
        asset_content_type: application/zip
